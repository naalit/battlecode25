
// GENERATED BY microgen.py
package immanentize;

import battlecode.common.*;
import static immanentize.Micro.*;
import static immanentize.RobotPlayer.*;

public class MicroHelper {


  static void processSplasherLocsGenHelper(MapLocation center, MicroLoc[] ulocs) throws GameActionException {
    MapLocation loc;
    var locs = new double[7][7];

    loc = center.translate(-4, -2);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[1][1] += MAP_PAINT_VALUE;
          locs[0][2] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[0][2] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[1][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][2] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-4, -1);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[1][2] += MAP_PAINT_VALUE;
          locs[0][2] += MAP_PAINT_VALUE;
          locs[0][3] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[0][2] += 2 * MAP_PAINT_VALUE;
          locs[0][3] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[1][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][3] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-4, 0);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[1][3] += MAP_PAINT_VALUE;
          locs[0][2] += MAP_PAINT_VALUE;
          locs[0][3] += MAP_PAINT_VALUE;
          locs[0][4] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[0][2] += 2 * MAP_PAINT_VALUE;
          locs[0][3] += 2 * MAP_PAINT_VALUE;
          locs[0][4] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[1][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][4] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-4, 1);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[1][4] += MAP_PAINT_VALUE;
          locs[0][3] += MAP_PAINT_VALUE;
          locs[0][4] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[0][3] += 2 * MAP_PAINT_VALUE;
          locs[0][4] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[1][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][4] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-4, 2);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[1][5] += MAP_PAINT_VALUE;
          locs[0][4] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[0][4] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[1][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][4] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-3, -3);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[2][0] += MAP_PAINT_VALUE;
          locs[1][1] += MAP_PAINT_VALUE;
          locs[0][2] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[1][1] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[2][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][2] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-3, -2);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[2][1] += MAP_PAINT_VALUE;
          locs[1][1] += MAP_PAINT_VALUE;
          locs[1][2] += MAP_PAINT_VALUE;
          locs[0][2] += MAP_PAINT_VALUE;
          locs[0][3] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[0][2] += 2 * MAP_PAINT_VALUE;
          locs[1][1] += 2 * MAP_PAINT_VALUE;
          locs[1][2] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[2][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][3] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-3, -1);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[2][2] += MAP_PAINT_VALUE;
          locs[1][1] += MAP_PAINT_VALUE;
          locs[1][2] += MAP_PAINT_VALUE;
          locs[1][3] += MAP_PAINT_VALUE;
          locs[0][2] += MAP_PAINT_VALUE;
          locs[0][3] += MAP_PAINT_VALUE;
          locs[0][4] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[0][2] += 2 * MAP_PAINT_VALUE;
          locs[0][3] += 2 * MAP_PAINT_VALUE;
          locs[1][1] += 2 * MAP_PAINT_VALUE;
          locs[1][2] += 2 * MAP_PAINT_VALUE;
          locs[1][3] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[2][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][4] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-3, 0);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[2][3] += MAP_PAINT_VALUE;
          locs[1][2] += MAP_PAINT_VALUE;
          locs[1][3] += MAP_PAINT_VALUE;
          locs[1][4] += MAP_PAINT_VALUE;
          locs[0][2] += MAP_PAINT_VALUE;
          locs[0][3] += MAP_PAINT_VALUE;
          locs[0][4] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[0][2] += 2 * MAP_PAINT_VALUE;
          locs[0][3] += 2 * MAP_PAINT_VALUE;
          locs[0][4] += 2 * MAP_PAINT_VALUE;
          locs[1][2] += 2 * MAP_PAINT_VALUE;
          locs[1][3] += 2 * MAP_PAINT_VALUE;
          locs[1][4] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[2][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][4] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-3, 1);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[2][4] += MAP_PAINT_VALUE;
          locs[1][3] += MAP_PAINT_VALUE;
          locs[1][4] += MAP_PAINT_VALUE;
          locs[1][5] += MAP_PAINT_VALUE;
          locs[0][2] += MAP_PAINT_VALUE;
          locs[0][3] += MAP_PAINT_VALUE;
          locs[0][4] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[0][3] += 2 * MAP_PAINT_VALUE;
          locs[0][4] += 2 * MAP_PAINT_VALUE;
          locs[1][3] += 2 * MAP_PAINT_VALUE;
          locs[1][4] += 2 * MAP_PAINT_VALUE;
          locs[1][5] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[2][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][4] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-3, 2);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[2][5] += MAP_PAINT_VALUE;
          locs[1][4] += MAP_PAINT_VALUE;
          locs[1][5] += MAP_PAINT_VALUE;
          locs[0][3] += MAP_PAINT_VALUE;
          locs[0][4] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[0][4] += 2 * MAP_PAINT_VALUE;
          locs[1][4] += 2 * MAP_PAINT_VALUE;
          locs[1][5] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[2][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][4] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-3, 3);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[2][6] += MAP_PAINT_VALUE;
          locs[1][5] += MAP_PAINT_VALUE;
          locs[0][4] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[1][5] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[2][6] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][4] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-2, -4);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[2][0] += MAP_PAINT_VALUE;
          locs[1][1] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[2][0] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[2][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][1] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-2, -3);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[3][0] += MAP_PAINT_VALUE;
          locs[2][0] += MAP_PAINT_VALUE;
          locs[2][1] += MAP_PAINT_VALUE;
          locs[1][1] += MAP_PAINT_VALUE;
          locs[1][2] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[1][1] += 2 * MAP_PAINT_VALUE;
          locs[2][0] += 2 * MAP_PAINT_VALUE;
          locs[2][1] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[3][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][2] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-2, -2);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[3][1] += MAP_PAINT_VALUE;
          locs[2][0] += MAP_PAINT_VALUE;
          locs[2][1] += MAP_PAINT_VALUE;
          locs[2][2] += MAP_PAINT_VALUE;
          locs[1][1] += MAP_PAINT_VALUE;
          locs[1][2] += MAP_PAINT_VALUE;
          locs[1][3] += MAP_PAINT_VALUE;
          locs[0][2] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[0][2] += 2 * MAP_PAINT_VALUE;
          locs[1][1] += 2 * MAP_PAINT_VALUE;
          locs[1][2] += 2 * MAP_PAINT_VALUE;
          locs[2][0] += 2 * MAP_PAINT_VALUE;
          locs[2][1] += 2 * MAP_PAINT_VALUE;
          locs[2][2] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[3][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][2] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-2, -1);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[3][2] += MAP_PAINT_VALUE;
          locs[2][1] += MAP_PAINT_VALUE;
          locs[2][2] += MAP_PAINT_VALUE;
          locs[2][3] += MAP_PAINT_VALUE;
          locs[1][1] += MAP_PAINT_VALUE;
          locs[1][2] += MAP_PAINT_VALUE;
          locs[1][3] += MAP_PAINT_VALUE;
          locs[1][4] += MAP_PAINT_VALUE;
          locs[0][2] += MAP_PAINT_VALUE;
          locs[0][3] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[0][2] += 2 * MAP_PAINT_VALUE;
          locs[0][3] += 2 * MAP_PAINT_VALUE;
          locs[1][1] += 2 * MAP_PAINT_VALUE;
          locs[1][2] += 2 * MAP_PAINT_VALUE;
          locs[1][3] += 2 * MAP_PAINT_VALUE;
          locs[2][1] += 2 * MAP_PAINT_VALUE;
          locs[2][2] += 2 * MAP_PAINT_VALUE;
          locs[2][3] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[3][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][3] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-2, 0);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[3][3] += MAP_PAINT_VALUE;
          locs[2][2] += MAP_PAINT_VALUE;
          locs[2][3] += MAP_PAINT_VALUE;
          locs[2][4] += MAP_PAINT_VALUE;
          locs[1][1] += MAP_PAINT_VALUE;
          locs[1][2] += MAP_PAINT_VALUE;
          locs[1][3] += MAP_PAINT_VALUE;
          locs[1][4] += MAP_PAINT_VALUE;
          locs[1][5] += MAP_PAINT_VALUE;
          locs[0][2] += MAP_PAINT_VALUE;
          locs[0][3] += MAP_PAINT_VALUE;
          locs[0][4] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[0][2] += 2 * MAP_PAINT_VALUE;
          locs[0][3] += 2 * MAP_PAINT_VALUE;
          locs[0][4] += 2 * MAP_PAINT_VALUE;
          locs[1][2] += 2 * MAP_PAINT_VALUE;
          locs[1][3] += 2 * MAP_PAINT_VALUE;
          locs[1][4] += 2 * MAP_PAINT_VALUE;
          locs[2][2] += 2 * MAP_PAINT_VALUE;
          locs[2][3] += 2 * MAP_PAINT_VALUE;
          locs[2][4] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[3][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][4] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-2, 1);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[3][4] += MAP_PAINT_VALUE;
          locs[2][3] += MAP_PAINT_VALUE;
          locs[2][4] += MAP_PAINT_VALUE;
          locs[2][5] += MAP_PAINT_VALUE;
          locs[1][2] += MAP_PAINT_VALUE;
          locs[1][3] += MAP_PAINT_VALUE;
          locs[1][4] += MAP_PAINT_VALUE;
          locs[1][5] += MAP_PAINT_VALUE;
          locs[0][3] += MAP_PAINT_VALUE;
          locs[0][4] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[0][3] += 2 * MAP_PAINT_VALUE;
          locs[0][4] += 2 * MAP_PAINT_VALUE;
          locs[1][3] += 2 * MAP_PAINT_VALUE;
          locs[1][4] += 2 * MAP_PAINT_VALUE;
          locs[1][5] += 2 * MAP_PAINT_VALUE;
          locs[2][3] += 2 * MAP_PAINT_VALUE;
          locs[2][4] += 2 * MAP_PAINT_VALUE;
          locs[2][5] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[3][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][4] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-2, 2);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[3][5] += MAP_PAINT_VALUE;
          locs[2][4] += MAP_PAINT_VALUE;
          locs[2][5] += MAP_PAINT_VALUE;
          locs[2][6] += MAP_PAINT_VALUE;
          locs[1][3] += MAP_PAINT_VALUE;
          locs[1][4] += MAP_PAINT_VALUE;
          locs[1][5] += MAP_PAINT_VALUE;
          locs[0][4] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[0][4] += 2 * MAP_PAINT_VALUE;
          locs[1][4] += 2 * MAP_PAINT_VALUE;
          locs[1][5] += 2 * MAP_PAINT_VALUE;
          locs[2][4] += 2 * MAP_PAINT_VALUE;
          locs[2][5] += 2 * MAP_PAINT_VALUE;
          locs[2][6] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[3][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][6] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][4] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-2, 3);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[3][6] += MAP_PAINT_VALUE;
          locs[2][5] += MAP_PAINT_VALUE;
          locs[2][6] += MAP_PAINT_VALUE;
          locs[1][4] += MAP_PAINT_VALUE;
          locs[1][5] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[1][5] += 2 * MAP_PAINT_VALUE;
          locs[2][5] += 2 * MAP_PAINT_VALUE;
          locs[2][6] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[3][6] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][6] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][5] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-2, 4);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[2][6] += MAP_PAINT_VALUE;
          locs[1][5] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[2][6] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[2][6] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][5] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-1, -4);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[3][0] += MAP_PAINT_VALUE;
          locs[2][0] += MAP_PAINT_VALUE;
          locs[2][1] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[2][0] += 2 * MAP_PAINT_VALUE;
          locs[3][0] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[3][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][1] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-1, -3);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[4][0] += MAP_PAINT_VALUE;
          locs[3][0] += MAP_PAINT_VALUE;
          locs[3][1] += MAP_PAINT_VALUE;
          locs[2][0] += MAP_PAINT_VALUE;
          locs[2][1] += MAP_PAINT_VALUE;
          locs[2][2] += MAP_PAINT_VALUE;
          locs[1][1] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[1][1] += 2 * MAP_PAINT_VALUE;
          locs[2][0] += 2 * MAP_PAINT_VALUE;
          locs[2][1] += 2 * MAP_PAINT_VALUE;
          locs[3][0] += 2 * MAP_PAINT_VALUE;
          locs[3][1] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[4][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][1] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-1, -2);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[4][1] += MAP_PAINT_VALUE;
          locs[3][0] += MAP_PAINT_VALUE;
          locs[3][1] += MAP_PAINT_VALUE;
          locs[3][2] += MAP_PAINT_VALUE;
          locs[2][0] += MAP_PAINT_VALUE;
          locs[2][1] += MAP_PAINT_VALUE;
          locs[2][2] += MAP_PAINT_VALUE;
          locs[2][3] += MAP_PAINT_VALUE;
          locs[1][1] += MAP_PAINT_VALUE;
          locs[1][2] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[1][1] += 2 * MAP_PAINT_VALUE;
          locs[1][2] += 2 * MAP_PAINT_VALUE;
          locs[2][0] += 2 * MAP_PAINT_VALUE;
          locs[2][1] += 2 * MAP_PAINT_VALUE;
          locs[2][2] += 2 * MAP_PAINT_VALUE;
          locs[3][0] += 2 * MAP_PAINT_VALUE;
          locs[3][1] += 2 * MAP_PAINT_VALUE;
          locs[3][2] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[4][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][2] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-1, -1);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[4][2] += MAP_PAINT_VALUE;
          locs[3][1] += MAP_PAINT_VALUE;
          locs[3][2] += MAP_PAINT_VALUE;
          locs[3][3] += MAP_PAINT_VALUE;
          locs[2][0] += MAP_PAINT_VALUE;
          locs[2][1] += MAP_PAINT_VALUE;
          locs[2][2] += MAP_PAINT_VALUE;
          locs[2][3] += MAP_PAINT_VALUE;
          locs[2][4] += MAP_PAINT_VALUE;
          locs[1][1] += MAP_PAINT_VALUE;
          locs[1][2] += MAP_PAINT_VALUE;
          locs[1][3] += MAP_PAINT_VALUE;
          locs[0][2] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[1][1] += 2 * MAP_PAINT_VALUE;
          locs[1][2] += 2 * MAP_PAINT_VALUE;
          locs[1][3] += 2 * MAP_PAINT_VALUE;
          locs[2][1] += 2 * MAP_PAINT_VALUE;
          locs[2][2] += 2 * MAP_PAINT_VALUE;
          locs[2][3] += 2 * MAP_PAINT_VALUE;
          locs[3][1] += 2 * MAP_PAINT_VALUE;
          locs[3][2] += 2 * MAP_PAINT_VALUE;
          locs[3][3] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[4][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][2] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-1, 0);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[4][3] += MAP_PAINT_VALUE;
          locs[3][2] += MAP_PAINT_VALUE;
          locs[3][3] += MAP_PAINT_VALUE;
          locs[3][4] += MAP_PAINT_VALUE;
          locs[2][1] += MAP_PAINT_VALUE;
          locs[2][2] += MAP_PAINT_VALUE;
          locs[2][3] += MAP_PAINT_VALUE;
          locs[2][4] += MAP_PAINT_VALUE;
          locs[2][5] += MAP_PAINT_VALUE;
          locs[1][2] += MAP_PAINT_VALUE;
          locs[1][3] += MAP_PAINT_VALUE;
          locs[1][4] += MAP_PAINT_VALUE;
          locs[0][3] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[1][2] += 2 * MAP_PAINT_VALUE;
          locs[1][3] += 2 * MAP_PAINT_VALUE;
          locs[1][4] += 2 * MAP_PAINT_VALUE;
          locs[2][2] += 2 * MAP_PAINT_VALUE;
          locs[2][3] += 2 * MAP_PAINT_VALUE;
          locs[2][4] += 2 * MAP_PAINT_VALUE;
          locs[3][2] += 2 * MAP_PAINT_VALUE;
          locs[3][3] += 2 * MAP_PAINT_VALUE;
          locs[3][4] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[4][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][3] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-1, 1);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[4][4] += MAP_PAINT_VALUE;
          locs[3][3] += MAP_PAINT_VALUE;
          locs[3][4] += MAP_PAINT_VALUE;
          locs[3][5] += MAP_PAINT_VALUE;
          locs[2][2] += MAP_PAINT_VALUE;
          locs[2][3] += MAP_PAINT_VALUE;
          locs[2][4] += MAP_PAINT_VALUE;
          locs[2][5] += MAP_PAINT_VALUE;
          locs[2][6] += MAP_PAINT_VALUE;
          locs[1][3] += MAP_PAINT_VALUE;
          locs[1][4] += MAP_PAINT_VALUE;
          locs[1][5] += MAP_PAINT_VALUE;
          locs[0][4] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[1][3] += 2 * MAP_PAINT_VALUE;
          locs[1][4] += 2 * MAP_PAINT_VALUE;
          locs[1][5] += 2 * MAP_PAINT_VALUE;
          locs[2][3] += 2 * MAP_PAINT_VALUE;
          locs[2][4] += 2 * MAP_PAINT_VALUE;
          locs[2][5] += 2 * MAP_PAINT_VALUE;
          locs[3][3] += 2 * MAP_PAINT_VALUE;
          locs[3][4] += 2 * MAP_PAINT_VALUE;
          locs[3][5] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[4][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][6] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[0][4] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-1, 2);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[4][5] += MAP_PAINT_VALUE;
          locs[3][4] += MAP_PAINT_VALUE;
          locs[3][5] += MAP_PAINT_VALUE;
          locs[3][6] += MAP_PAINT_VALUE;
          locs[2][3] += MAP_PAINT_VALUE;
          locs[2][4] += MAP_PAINT_VALUE;
          locs[2][5] += MAP_PAINT_VALUE;
          locs[2][6] += MAP_PAINT_VALUE;
          locs[1][4] += MAP_PAINT_VALUE;
          locs[1][5] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[1][4] += 2 * MAP_PAINT_VALUE;
          locs[1][5] += 2 * MAP_PAINT_VALUE;
          locs[2][4] += 2 * MAP_PAINT_VALUE;
          locs[2][5] += 2 * MAP_PAINT_VALUE;
          locs[2][6] += 2 * MAP_PAINT_VALUE;
          locs[3][4] += 2 * MAP_PAINT_VALUE;
          locs[3][5] += 2 * MAP_PAINT_VALUE;
          locs[3][6] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[4][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][6] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][6] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][5] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-1, 3);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[4][6] += MAP_PAINT_VALUE;
          locs[3][5] += MAP_PAINT_VALUE;
          locs[3][6] += MAP_PAINT_VALUE;
          locs[2][4] += MAP_PAINT_VALUE;
          locs[2][5] += MAP_PAINT_VALUE;
          locs[2][6] += MAP_PAINT_VALUE;
          locs[1][5] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[1][5] += 2 * MAP_PAINT_VALUE;
          locs[2][5] += 2 * MAP_PAINT_VALUE;
          locs[2][6] += 2 * MAP_PAINT_VALUE;
          locs[3][5] += 2 * MAP_PAINT_VALUE;
          locs[3][6] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[4][6] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][6] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][6] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][5] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(-1, 4);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[3][6] += MAP_PAINT_VALUE;
          locs[2][5] += MAP_PAINT_VALUE;
          locs[2][6] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[2][6] += 2 * MAP_PAINT_VALUE;
          locs[3][6] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[3][6] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][6] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(0, -4);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[4][0] += MAP_PAINT_VALUE;
          locs[3][0] += MAP_PAINT_VALUE;
          locs[3][1] += MAP_PAINT_VALUE;
          locs[2][0] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[2][0] += 2 * MAP_PAINT_VALUE;
          locs[3][0] += 2 * MAP_PAINT_VALUE;
          locs[4][0] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[4][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][0] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(0, -3);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[4][0] += MAP_PAINT_VALUE;
          locs[4][1] += MAP_PAINT_VALUE;
          locs[3][0] += MAP_PAINT_VALUE;
          locs[3][1] += MAP_PAINT_VALUE;
          locs[3][2] += MAP_PAINT_VALUE;
          locs[2][0] += MAP_PAINT_VALUE;
          locs[2][1] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[2][0] += 2 * MAP_PAINT_VALUE;
          locs[2][1] += 2 * MAP_PAINT_VALUE;
          locs[3][0] += 2 * MAP_PAINT_VALUE;
          locs[3][1] += 2 * MAP_PAINT_VALUE;
          locs[4][0] += 2 * MAP_PAINT_VALUE;
          locs[4][1] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[4][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][1] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(0, -2);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[5][1] += MAP_PAINT_VALUE;
          locs[4][0] += MAP_PAINT_VALUE;
          locs[4][1] += MAP_PAINT_VALUE;
          locs[4][2] += MAP_PAINT_VALUE;
          locs[3][0] += MAP_PAINT_VALUE;
          locs[3][1] += MAP_PAINT_VALUE;
          locs[3][2] += MAP_PAINT_VALUE;
          locs[3][3] += MAP_PAINT_VALUE;
          locs[2][0] += MAP_PAINT_VALUE;
          locs[2][1] += MAP_PAINT_VALUE;
          locs[2][2] += MAP_PAINT_VALUE;
          locs[1][1] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[2][0] += 2 * MAP_PAINT_VALUE;
          locs[2][1] += 2 * MAP_PAINT_VALUE;
          locs[2][2] += 2 * MAP_PAINT_VALUE;
          locs[3][0] += 2 * MAP_PAINT_VALUE;
          locs[3][1] += 2 * MAP_PAINT_VALUE;
          locs[3][2] += 2 * MAP_PAINT_VALUE;
          locs[4][0] += 2 * MAP_PAINT_VALUE;
          locs[4][1] += 2 * MAP_PAINT_VALUE;
          locs[4][2] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[5][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][1] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(0, -1);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[5][2] += MAP_PAINT_VALUE;
          locs[4][1] += MAP_PAINT_VALUE;
          locs[4][2] += MAP_PAINT_VALUE;
          locs[4][3] += MAP_PAINT_VALUE;
          locs[3][0] += MAP_PAINT_VALUE;
          locs[3][1] += MAP_PAINT_VALUE;
          locs[3][2] += MAP_PAINT_VALUE;
          locs[3][3] += MAP_PAINT_VALUE;
          locs[3][4] += MAP_PAINT_VALUE;
          locs[2][1] += MAP_PAINT_VALUE;
          locs[2][2] += MAP_PAINT_VALUE;
          locs[2][3] += MAP_PAINT_VALUE;
          locs[1][2] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[2][1] += 2 * MAP_PAINT_VALUE;
          locs[2][2] += 2 * MAP_PAINT_VALUE;
          locs[2][3] += 2 * MAP_PAINT_VALUE;
          locs[3][1] += 2 * MAP_PAINT_VALUE;
          locs[3][2] += 2 * MAP_PAINT_VALUE;
          locs[3][3] += 2 * MAP_PAINT_VALUE;
          locs[4][1] += 2 * MAP_PAINT_VALUE;
          locs[4][2] += 2 * MAP_PAINT_VALUE;
          locs[4][3] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[5][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][2] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(0, 0);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[5][3] += MAP_PAINT_VALUE;
          locs[4][2] += MAP_PAINT_VALUE;
          locs[4][3] += MAP_PAINT_VALUE;
          locs[4][4] += MAP_PAINT_VALUE;
          locs[3][1] += MAP_PAINT_VALUE;
          locs[3][2] += MAP_PAINT_VALUE;
          locs[3][3] += MAP_PAINT_VALUE;
          locs[3][4] += MAP_PAINT_VALUE;
          locs[3][5] += MAP_PAINT_VALUE;
          locs[2][2] += MAP_PAINT_VALUE;
          locs[2][3] += MAP_PAINT_VALUE;
          locs[2][4] += MAP_PAINT_VALUE;
          locs[1][3] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[2][2] += 2 * MAP_PAINT_VALUE;
          locs[2][3] += 2 * MAP_PAINT_VALUE;
          locs[2][4] += 2 * MAP_PAINT_VALUE;
          locs[3][2] += 2 * MAP_PAINT_VALUE;
          locs[3][3] += 2 * MAP_PAINT_VALUE;
          locs[3][4] += 2 * MAP_PAINT_VALUE;
          locs[4][2] += 2 * MAP_PAINT_VALUE;
          locs[4][3] += 2 * MAP_PAINT_VALUE;
          locs[4][4] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[5][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][3] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(0, 1);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[5][4] += MAP_PAINT_VALUE;
          locs[4][3] += MAP_PAINT_VALUE;
          locs[4][4] += MAP_PAINT_VALUE;
          locs[4][5] += MAP_PAINT_VALUE;
          locs[3][2] += MAP_PAINT_VALUE;
          locs[3][3] += MAP_PAINT_VALUE;
          locs[3][4] += MAP_PAINT_VALUE;
          locs[3][5] += MAP_PAINT_VALUE;
          locs[3][6] += MAP_PAINT_VALUE;
          locs[2][3] += MAP_PAINT_VALUE;
          locs[2][4] += MAP_PAINT_VALUE;
          locs[2][5] += MAP_PAINT_VALUE;
          locs[1][4] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[2][3] += 2 * MAP_PAINT_VALUE;
          locs[2][4] += 2 * MAP_PAINT_VALUE;
          locs[2][5] += 2 * MAP_PAINT_VALUE;
          locs[3][3] += 2 * MAP_PAINT_VALUE;
          locs[3][4] += 2 * MAP_PAINT_VALUE;
          locs[3][5] += 2 * MAP_PAINT_VALUE;
          locs[4][3] += 2 * MAP_PAINT_VALUE;
          locs[4][4] += 2 * MAP_PAINT_VALUE;
          locs[4][5] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[5][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][6] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][4] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(0, 2);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[5][5] += MAP_PAINT_VALUE;
          locs[4][4] += MAP_PAINT_VALUE;
          locs[4][5] += MAP_PAINT_VALUE;
          locs[4][6] += MAP_PAINT_VALUE;
          locs[3][3] += MAP_PAINT_VALUE;
          locs[3][4] += MAP_PAINT_VALUE;
          locs[3][5] += MAP_PAINT_VALUE;
          locs[3][6] += MAP_PAINT_VALUE;
          locs[2][4] += MAP_PAINT_VALUE;
          locs[2][5] += MAP_PAINT_VALUE;
          locs[2][6] += MAP_PAINT_VALUE;
          locs[1][5] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[2][4] += 2 * MAP_PAINT_VALUE;
          locs[2][5] += 2 * MAP_PAINT_VALUE;
          locs[2][6] += 2 * MAP_PAINT_VALUE;
          locs[3][4] += 2 * MAP_PAINT_VALUE;
          locs[3][5] += 2 * MAP_PAINT_VALUE;
          locs[3][6] += 2 * MAP_PAINT_VALUE;
          locs[4][4] += 2 * MAP_PAINT_VALUE;
          locs[4][5] += 2 * MAP_PAINT_VALUE;
          locs[4][6] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[5][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][6] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][6] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][6] -= 1.5 * MAP_PAINT_VALUE;
          locs[1][5] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(0, 3);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[4][5] += MAP_PAINT_VALUE;
          locs[4][6] += MAP_PAINT_VALUE;
          locs[3][4] += MAP_PAINT_VALUE;
          locs[3][5] += MAP_PAINT_VALUE;
          locs[3][6] += MAP_PAINT_VALUE;
          locs[2][5] += MAP_PAINT_VALUE;
          locs[2][6] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[2][5] += 2 * MAP_PAINT_VALUE;
          locs[2][6] += 2 * MAP_PAINT_VALUE;
          locs[3][5] += 2 * MAP_PAINT_VALUE;
          locs[3][6] += 2 * MAP_PAINT_VALUE;
          locs[4][5] += 2 * MAP_PAINT_VALUE;
          locs[4][6] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[4][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][6] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][6] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][6] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(0, 4);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[4][6] += MAP_PAINT_VALUE;
          locs[3][5] += MAP_PAINT_VALUE;
          locs[3][6] += MAP_PAINT_VALUE;
          locs[2][6] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[2][6] += 2 * MAP_PAINT_VALUE;
          locs[3][6] += 2 * MAP_PAINT_VALUE;
          locs[4][6] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[4][6] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][6] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][6] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(1, -4);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[4][0] += MAP_PAINT_VALUE;
          locs[4][1] += MAP_PAINT_VALUE;
          locs[3][0] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[3][0] += 2 * MAP_PAINT_VALUE;
          locs[4][0] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[4][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][0] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(1, -3);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[5][1] += MAP_PAINT_VALUE;
          locs[4][0] += MAP_PAINT_VALUE;
          locs[4][1] += MAP_PAINT_VALUE;
          locs[4][2] += MAP_PAINT_VALUE;
          locs[3][0] += MAP_PAINT_VALUE;
          locs[3][1] += MAP_PAINT_VALUE;
          locs[2][0] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[3][0] += 2 * MAP_PAINT_VALUE;
          locs[3][1] += 2 * MAP_PAINT_VALUE;
          locs[4][0] += 2 * MAP_PAINT_VALUE;
          locs[4][1] += 2 * MAP_PAINT_VALUE;
          locs[5][1] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[5][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][0] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(1, -2);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[5][1] += MAP_PAINT_VALUE;
          locs[5][2] += MAP_PAINT_VALUE;
          locs[4][0] += MAP_PAINT_VALUE;
          locs[4][1] += MAP_PAINT_VALUE;
          locs[4][2] += MAP_PAINT_VALUE;
          locs[4][3] += MAP_PAINT_VALUE;
          locs[3][0] += MAP_PAINT_VALUE;
          locs[3][1] += MAP_PAINT_VALUE;
          locs[3][2] += MAP_PAINT_VALUE;
          locs[2][1] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[3][0] += 2 * MAP_PAINT_VALUE;
          locs[3][1] += 2 * MAP_PAINT_VALUE;
          locs[3][2] += 2 * MAP_PAINT_VALUE;
          locs[4][0] += 2 * MAP_PAINT_VALUE;
          locs[4][1] += 2 * MAP_PAINT_VALUE;
          locs[4][2] += 2 * MAP_PAINT_VALUE;
          locs[5][1] += 2 * MAP_PAINT_VALUE;
          locs[5][2] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[5][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][1] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(1, -1);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[6][2] += MAP_PAINT_VALUE;
          locs[5][1] += MAP_PAINT_VALUE;
          locs[5][2] += MAP_PAINT_VALUE;
          locs[5][3] += MAP_PAINT_VALUE;
          locs[4][0] += MAP_PAINT_VALUE;
          locs[4][1] += MAP_PAINT_VALUE;
          locs[4][2] += MAP_PAINT_VALUE;
          locs[4][3] += MAP_PAINT_VALUE;
          locs[4][4] += MAP_PAINT_VALUE;
          locs[3][1] += MAP_PAINT_VALUE;
          locs[3][2] += MAP_PAINT_VALUE;
          locs[3][3] += MAP_PAINT_VALUE;
          locs[2][2] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[3][1] += 2 * MAP_PAINT_VALUE;
          locs[3][2] += 2 * MAP_PAINT_VALUE;
          locs[3][3] += 2 * MAP_PAINT_VALUE;
          locs[4][1] += 2 * MAP_PAINT_VALUE;
          locs[4][2] += 2 * MAP_PAINT_VALUE;
          locs[4][3] += 2 * MAP_PAINT_VALUE;
          locs[5][1] += 2 * MAP_PAINT_VALUE;
          locs[5][2] += 2 * MAP_PAINT_VALUE;
          locs[5][3] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[6][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][2] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(1, 0);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[6][3] += MAP_PAINT_VALUE;
          locs[5][2] += MAP_PAINT_VALUE;
          locs[5][3] += MAP_PAINT_VALUE;
          locs[5][4] += MAP_PAINT_VALUE;
          locs[4][1] += MAP_PAINT_VALUE;
          locs[4][2] += MAP_PAINT_VALUE;
          locs[4][3] += MAP_PAINT_VALUE;
          locs[4][4] += MAP_PAINT_VALUE;
          locs[4][5] += MAP_PAINT_VALUE;
          locs[3][2] += MAP_PAINT_VALUE;
          locs[3][3] += MAP_PAINT_VALUE;
          locs[3][4] += MAP_PAINT_VALUE;
          locs[2][3] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[3][2] += 2 * MAP_PAINT_VALUE;
          locs[3][3] += 2 * MAP_PAINT_VALUE;
          locs[3][4] += 2 * MAP_PAINT_VALUE;
          locs[4][2] += 2 * MAP_PAINT_VALUE;
          locs[4][3] += 2 * MAP_PAINT_VALUE;
          locs[4][4] += 2 * MAP_PAINT_VALUE;
          locs[5][2] += 2 * MAP_PAINT_VALUE;
          locs[5][3] += 2 * MAP_PAINT_VALUE;
          locs[5][4] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[6][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][3] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(1, 1);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[6][4] += MAP_PAINT_VALUE;
          locs[5][3] += MAP_PAINT_VALUE;
          locs[5][4] += MAP_PAINT_VALUE;
          locs[5][5] += MAP_PAINT_VALUE;
          locs[4][2] += MAP_PAINT_VALUE;
          locs[4][3] += MAP_PAINT_VALUE;
          locs[4][4] += MAP_PAINT_VALUE;
          locs[4][5] += MAP_PAINT_VALUE;
          locs[4][6] += MAP_PAINT_VALUE;
          locs[3][3] += MAP_PAINT_VALUE;
          locs[3][4] += MAP_PAINT_VALUE;
          locs[3][5] += MAP_PAINT_VALUE;
          locs[2][4] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[3][3] += 2 * MAP_PAINT_VALUE;
          locs[3][4] += 2 * MAP_PAINT_VALUE;
          locs[3][5] += 2 * MAP_PAINT_VALUE;
          locs[4][3] += 2 * MAP_PAINT_VALUE;
          locs[4][4] += 2 * MAP_PAINT_VALUE;
          locs[4][5] += 2 * MAP_PAINT_VALUE;
          locs[5][3] += 2 * MAP_PAINT_VALUE;
          locs[5][4] += 2 * MAP_PAINT_VALUE;
          locs[5][5] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[6][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][6] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][4] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(1, 2);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[5][4] += MAP_PAINT_VALUE;
          locs[5][5] += MAP_PAINT_VALUE;
          locs[4][3] += MAP_PAINT_VALUE;
          locs[4][4] += MAP_PAINT_VALUE;
          locs[4][5] += MAP_PAINT_VALUE;
          locs[4][6] += MAP_PAINT_VALUE;
          locs[3][4] += MAP_PAINT_VALUE;
          locs[3][5] += MAP_PAINT_VALUE;
          locs[3][6] += MAP_PAINT_VALUE;
          locs[2][5] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[3][4] += 2 * MAP_PAINT_VALUE;
          locs[3][5] += 2 * MAP_PAINT_VALUE;
          locs[3][6] += 2 * MAP_PAINT_VALUE;
          locs[4][4] += 2 * MAP_PAINT_VALUE;
          locs[4][5] += 2 * MAP_PAINT_VALUE;
          locs[4][6] += 2 * MAP_PAINT_VALUE;
          locs[5][4] += 2 * MAP_PAINT_VALUE;
          locs[5][5] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[5][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][6] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][6] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][5] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(1, 3);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[5][5] += MAP_PAINT_VALUE;
          locs[4][4] += MAP_PAINT_VALUE;
          locs[4][5] += MAP_PAINT_VALUE;
          locs[4][6] += MAP_PAINT_VALUE;
          locs[3][5] += MAP_PAINT_VALUE;
          locs[3][6] += MAP_PAINT_VALUE;
          locs[2][6] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[3][5] += 2 * MAP_PAINT_VALUE;
          locs[3][6] += 2 * MAP_PAINT_VALUE;
          locs[4][5] += 2 * MAP_PAINT_VALUE;
          locs[4][6] += 2 * MAP_PAINT_VALUE;
          locs[5][5] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[5][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][6] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][6] -= 1.5 * MAP_PAINT_VALUE;
          locs[2][6] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(1, 4);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[4][5] += MAP_PAINT_VALUE;
          locs[4][6] += MAP_PAINT_VALUE;
          locs[3][6] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[3][6] += 2 * MAP_PAINT_VALUE;
          locs[4][6] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[4][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][6] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][6] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(2, -4);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[5][1] += MAP_PAINT_VALUE;
          locs[4][0] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[4][0] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[5][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][0] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(2, -3);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[5][1] += MAP_PAINT_VALUE;
          locs[5][2] += MAP_PAINT_VALUE;
          locs[4][0] += MAP_PAINT_VALUE;
          locs[4][1] += MAP_PAINT_VALUE;
          locs[3][0] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[4][0] += 2 * MAP_PAINT_VALUE;
          locs[4][1] += 2 * MAP_PAINT_VALUE;
          locs[5][1] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[5][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][0] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(2, -2);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[6][2] += MAP_PAINT_VALUE;
          locs[5][1] += MAP_PAINT_VALUE;
          locs[5][2] += MAP_PAINT_VALUE;
          locs[5][3] += MAP_PAINT_VALUE;
          locs[4][0] += MAP_PAINT_VALUE;
          locs[4][1] += MAP_PAINT_VALUE;
          locs[4][2] += MAP_PAINT_VALUE;
          locs[3][1] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[4][0] += 2 * MAP_PAINT_VALUE;
          locs[4][1] += 2 * MAP_PAINT_VALUE;
          locs[4][2] += 2 * MAP_PAINT_VALUE;
          locs[5][1] += 2 * MAP_PAINT_VALUE;
          locs[5][2] += 2 * MAP_PAINT_VALUE;
          locs[6][2] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[6][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][0] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][1] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(2, -1);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[6][2] += MAP_PAINT_VALUE;
          locs[6][3] += MAP_PAINT_VALUE;
          locs[5][1] += MAP_PAINT_VALUE;
          locs[5][2] += MAP_PAINT_VALUE;
          locs[5][3] += MAP_PAINT_VALUE;
          locs[5][4] += MAP_PAINT_VALUE;
          locs[4][1] += MAP_PAINT_VALUE;
          locs[4][2] += MAP_PAINT_VALUE;
          locs[4][3] += MAP_PAINT_VALUE;
          locs[3][2] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[4][1] += 2 * MAP_PAINT_VALUE;
          locs[4][2] += 2 * MAP_PAINT_VALUE;
          locs[4][3] += 2 * MAP_PAINT_VALUE;
          locs[5][1] += 2 * MAP_PAINT_VALUE;
          locs[5][2] += 2 * MAP_PAINT_VALUE;
          locs[5][3] += 2 * MAP_PAINT_VALUE;
          locs[6][2] += 2 * MAP_PAINT_VALUE;
          locs[6][3] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[6][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[6][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][2] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(2, 0);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[6][2] += MAP_PAINT_VALUE;
          locs[6][3] += MAP_PAINT_VALUE;
          locs[6][4] += MAP_PAINT_VALUE;
          locs[5][1] += MAP_PAINT_VALUE;
          locs[5][2] += MAP_PAINT_VALUE;
          locs[5][3] += MAP_PAINT_VALUE;
          locs[5][4] += MAP_PAINT_VALUE;
          locs[5][5] += MAP_PAINT_VALUE;
          locs[4][2] += MAP_PAINT_VALUE;
          locs[4][3] += MAP_PAINT_VALUE;
          locs[4][4] += MAP_PAINT_VALUE;
          locs[3][3] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[4][2] += 2 * MAP_PAINT_VALUE;
          locs[4][3] += 2 * MAP_PAINT_VALUE;
          locs[4][4] += 2 * MAP_PAINT_VALUE;
          locs[5][2] += 2 * MAP_PAINT_VALUE;
          locs[5][3] += 2 * MAP_PAINT_VALUE;
          locs[5][4] += 2 * MAP_PAINT_VALUE;
          locs[6][2] += 2 * MAP_PAINT_VALUE;
          locs[6][3] += 2 * MAP_PAINT_VALUE;
          locs[6][4] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[6][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[6][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[6][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][3] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(2, 1);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[6][3] += MAP_PAINT_VALUE;
          locs[6][4] += MAP_PAINT_VALUE;
          locs[5][2] += MAP_PAINT_VALUE;
          locs[5][3] += MAP_PAINT_VALUE;
          locs[5][4] += MAP_PAINT_VALUE;
          locs[5][5] += MAP_PAINT_VALUE;
          locs[4][3] += MAP_PAINT_VALUE;
          locs[4][4] += MAP_PAINT_VALUE;
          locs[4][5] += MAP_PAINT_VALUE;
          locs[3][4] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[4][3] += 2 * MAP_PAINT_VALUE;
          locs[4][4] += 2 * MAP_PAINT_VALUE;
          locs[4][5] += 2 * MAP_PAINT_VALUE;
          locs[5][3] += 2 * MAP_PAINT_VALUE;
          locs[5][4] += 2 * MAP_PAINT_VALUE;
          locs[5][5] += 2 * MAP_PAINT_VALUE;
          locs[6][3] += 2 * MAP_PAINT_VALUE;
          locs[6][4] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[6][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[6][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][4] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(2, 2);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[6][4] += MAP_PAINT_VALUE;
          locs[5][3] += MAP_PAINT_VALUE;
          locs[5][4] += MAP_PAINT_VALUE;
          locs[5][5] += MAP_PAINT_VALUE;
          locs[4][4] += MAP_PAINT_VALUE;
          locs[4][5] += MAP_PAINT_VALUE;
          locs[4][6] += MAP_PAINT_VALUE;
          locs[3][5] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[4][4] += 2 * MAP_PAINT_VALUE;
          locs[4][5] += 2 * MAP_PAINT_VALUE;
          locs[4][6] += 2 * MAP_PAINT_VALUE;
          locs[5][4] += 2 * MAP_PAINT_VALUE;
          locs[5][5] += 2 * MAP_PAINT_VALUE;
          locs[6][4] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[6][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][6] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][5] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(2, 3);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[5][4] += MAP_PAINT_VALUE;
          locs[5][5] += MAP_PAINT_VALUE;
          locs[4][5] += MAP_PAINT_VALUE;
          locs[4][6] += MAP_PAINT_VALUE;
          locs[3][6] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[4][5] += 2 * MAP_PAINT_VALUE;
          locs[4][6] += 2 * MAP_PAINT_VALUE;
          locs[5][5] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[5][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][6] -= 1.5 * MAP_PAINT_VALUE;
          locs[3][6] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(2, 4);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[5][5] += MAP_PAINT_VALUE;
          locs[4][6] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[4][6] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[5][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][6] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(3, -3);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[6][2] += MAP_PAINT_VALUE;
          locs[5][1] += MAP_PAINT_VALUE;
          locs[4][0] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[5][1] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[6][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][0] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(3, -2);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[6][2] += MAP_PAINT_VALUE;
          locs[6][3] += MAP_PAINT_VALUE;
          locs[5][1] += MAP_PAINT_VALUE;
          locs[5][2] += MAP_PAINT_VALUE;
          locs[4][1] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[5][1] += 2 * MAP_PAINT_VALUE;
          locs[5][2] += 2 * MAP_PAINT_VALUE;
          locs[6][2] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[6][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[6][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][1] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(3, -1);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[6][2] += MAP_PAINT_VALUE;
          locs[6][3] += MAP_PAINT_VALUE;
          locs[6][4] += MAP_PAINT_VALUE;
          locs[5][1] += MAP_PAINT_VALUE;
          locs[5][2] += MAP_PAINT_VALUE;
          locs[5][3] += MAP_PAINT_VALUE;
          locs[4][2] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[5][1] += 2 * MAP_PAINT_VALUE;
          locs[5][2] += 2 * MAP_PAINT_VALUE;
          locs[5][3] += 2 * MAP_PAINT_VALUE;
          locs[6][2] += 2 * MAP_PAINT_VALUE;
          locs[6][3] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[6][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[6][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[6][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][1] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][2] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(3, 0);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[6][2] += MAP_PAINT_VALUE;
          locs[6][3] += MAP_PAINT_VALUE;
          locs[6][4] += MAP_PAINT_VALUE;
          locs[5][2] += MAP_PAINT_VALUE;
          locs[5][3] += MAP_PAINT_VALUE;
          locs[5][4] += MAP_PAINT_VALUE;
          locs[4][3] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[5][2] += 2 * MAP_PAINT_VALUE;
          locs[5][3] += 2 * MAP_PAINT_VALUE;
          locs[5][4] += 2 * MAP_PAINT_VALUE;
          locs[6][2] += 2 * MAP_PAINT_VALUE;
          locs[6][3] += 2 * MAP_PAINT_VALUE;
          locs[6][4] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[6][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[6][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[6][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][3] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(3, 1);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[6][2] += MAP_PAINT_VALUE;
          locs[6][3] += MAP_PAINT_VALUE;
          locs[6][4] += MAP_PAINT_VALUE;
          locs[5][3] += MAP_PAINT_VALUE;
          locs[5][4] += MAP_PAINT_VALUE;
          locs[5][5] += MAP_PAINT_VALUE;
          locs[4][4] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[5][3] += 2 * MAP_PAINT_VALUE;
          locs[5][4] += 2 * MAP_PAINT_VALUE;
          locs[5][5] += 2 * MAP_PAINT_VALUE;
          locs[6][3] += 2 * MAP_PAINT_VALUE;
          locs[6][4] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[6][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[6][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[6][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][4] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(3, 2);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[6][3] += MAP_PAINT_VALUE;
          locs[6][4] += MAP_PAINT_VALUE;
          locs[5][4] += MAP_PAINT_VALUE;
          locs[5][5] += MAP_PAINT_VALUE;
          locs[4][5] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[5][4] += 2 * MAP_PAINT_VALUE;
          locs[5][5] += 2 * MAP_PAINT_VALUE;
          locs[6][4] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[6][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[6][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][5] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(3, 3);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[6][4] += MAP_PAINT_VALUE;
          locs[5][5] += MAP_PAINT_VALUE;
          locs[4][6] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[5][5] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[6][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][5] -= 1.5 * MAP_PAINT_VALUE;
          locs[4][6] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(4, -2);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[6][2] += MAP_PAINT_VALUE;
          locs[5][1] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[6][2] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[6][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][1] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(4, -1);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[6][2] += MAP_PAINT_VALUE;
          locs[6][3] += MAP_PAINT_VALUE;
          locs[5][2] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[6][2] += 2 * MAP_PAINT_VALUE;
          locs[6][3] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[6][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[6][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][2] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(4, 0);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[6][2] += MAP_PAINT_VALUE;
          locs[6][3] += MAP_PAINT_VALUE;
          locs[6][4] += MAP_PAINT_VALUE;
          locs[5][3] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[6][2] += 2 * MAP_PAINT_VALUE;
          locs[6][3] += 2 * MAP_PAINT_VALUE;
          locs[6][4] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[6][2] -= 1.5 * MAP_PAINT_VALUE;
          locs[6][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[6][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][3] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(4, 1);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[6][3] += MAP_PAINT_VALUE;
          locs[6][4] += MAP_PAINT_VALUE;
          locs[5][4] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[6][3] += 2 * MAP_PAINT_VALUE;
          locs[6][4] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[6][3] -= 1.5 * MAP_PAINT_VALUE;
          locs[6][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][4] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }
    loc = center.translate(4, 2);
    if (rc.onTheMap(loc)) {
      var tile = rc.senseMapInfo(loc);
      if (tile.isPassable()) {
        if (tile.getPaint() == PaintType.EMPTY) {
          locs[6][4] += MAP_PAINT_VALUE;
          locs[5][5] += MAP_PAINT_VALUE;
        } else if (tile.getPaint().isEnemy()) {
          locs[6][4] += 2 * MAP_PAINT_VALUE;
        } else if (tile.getPaint() == PaintType.ALLY_SECONDARY) {
          locs[6][4] -= 1.5 * MAP_PAINT_VALUE;
          locs[5][5] -= 1.5 * MAP_PAINT_VALUE;
        }
      }
    }


    for (var unit : nearbyEnemies) {
      if (unit.type.isRobotType()) continue;
      var d = (double) Math.min(UnitType.SPLASHER.aoeAttackStrength, unit.health) / unit.type.health;
      var x = unit.location.x - center.x;
      var y = unit.location.y - center.y;
      int ax, ay;
      ax = x + 2;
      if (ax*ax + y*y <= 10) {
        locs[ax+3][y+3] += d;
      }
      ax = x + 1;
      ay = y + -1;
      if (ax*ax + ay*ay <= 10) {
        locs[ax+3][ay+3] += d;
      }
      if (ax*ax + y*y <= 10) {
        locs[ax+3][y+3] += d;
      }
      ay = y + 1;
      if (ax*ax + ay*ay <= 10) {
        locs[ax+3][ay+3] += d;
      }
      ay = y + -2;
      if (x*x + ay*ay <= 10) {
        locs[x+3][ay+3] += d;
      }
      ay = y + -1;
      if (x*x + ay*ay <= 10) {
        locs[x+3][ay+3] += d;
      }
      if (x*x + y*y <= 10) {
        locs[x+3][y+3] += d;
      }
      ay = y + 1;
      if (x*x + ay*ay <= 10) {
        locs[x+3][ay+3] += d;
      }
      ay = y + 2;
      if (x*x + ay*ay <= 10) {
        locs[x+3][ay+3] += d;
      }
      ax = x + -1;
      ay = y + -1;
      if (ax*ax + ay*ay <= 10) {
        locs[ax+3][ay+3] += d;
      }
      if (ax*ax + y*y <= 10) {
        locs[ax+3][y+3] += d;
      }
      ay = y + 1;
      if (ax*ax + ay*ay <= 10) {
        locs[ax+3][ay+3] += d;
      }
      ax = x + -2;
      if (ax*ax + y*y <= 10) {
        locs[ax+3][y+3] += d;
      }
    }


    var moveLocs = new MapLocation[9];
    var moveScores = new double[9];
    var cost = UnitType.SPLASHER.attackCost * FREE_PAINT_VALUE;
    // Allow painting over just one enemy tile when on ruins
//    if (map.ruinTarget != null && map.ruinTarget.center.isWithinDistanceSquared(rc.getLocation(), 8)
//        && map.ruinTarget.enemyTiles > 0 && map.ruinTarget.enemyTiles < 8) {
//      cost = 1.2 * MAP_PAINT_VALUE;
//    }

    loc = center.translate(-1, -1);
    if (rc.onTheMap(loc) && rc.senseMapInfo(loc).isPassable() && !rc.canSenseRobotAtLocation(loc)) {
      var mscore = cost;
      MapLocation mloc = null;
      if (locs[4][2] > mscore) {
        mscore = locs[4][2];
        mloc = center.translate(1, -1);
      }
      if (locs[3][1] > mscore) {
        mscore = locs[3][1];
        mloc = center.translate(0, -2);
      }
      if (locs[3][2] > mscore) {
        mscore = locs[3][2];
        mloc = center.translate(0, -1);
      }
      if (locs[3][3] > mscore) {
        mscore = locs[3][3];
        mloc = center.translate(0, 0);
      }
      if (locs[2][0] > mscore) {
        mscore = locs[2][0];
        mloc = center.translate(-1, -3);
      }
      if (locs[2][1] > mscore) {
        mscore = locs[2][1];
        mloc = center.translate(-1, -2);
      }
      if (locs[2][2] > mscore) {
        mscore = locs[2][2];
        mloc = center.translate(-1, -1);
      }
      if (locs[2][3] > mscore) {
        mscore = locs[2][3];
        mloc = center.translate(-1, 0);
      }
      if (locs[2][4] > mscore) {
        mscore = locs[2][4];
        mloc = center.translate(-1, 1);
      }
      if (locs[1][1] > mscore) {
        mscore = locs[1][1];
        mloc = center.translate(-2, -2);
      }
      if (locs[1][2] > mscore) {
        mscore = locs[1][2];
        mloc = center.translate(-2, -1);
      }
      if (locs[1][3] > mscore) {
        mscore = locs[1][3];
        mloc = center.translate(-2, 0);
      }
      if (locs[0][2] > mscore) {
        mscore = locs[0][2];
        mloc = center.translate(-3, -1);
      }
      moveScores[0] = mscore - cost;
      moveLocs[0] = mloc;
    }

    loc = center.translate(-1, 0);
    if (rc.onTheMap(loc) && rc.senseMapInfo(loc).isPassable() && !rc.canSenseRobotAtLocation(loc)) {
      var mscore = cost;
      MapLocation mloc = null;
      if (locs[4][3] > mscore) {
        mscore = locs[4][3];
        mloc = center.translate(1, 0);
      }
      if (locs[3][2] > mscore) {
        mscore = locs[3][2];
        mloc = center.translate(0, -1);
      }
      if (locs[3][3] > mscore) {
        mscore = locs[3][3];
        mloc = center.translate(0, 0);
      }
      if (locs[3][4] > mscore) {
        mscore = locs[3][4];
        mloc = center.translate(0, 1);
      }
      if (locs[2][1] > mscore) {
        mscore = locs[2][1];
        mloc = center.translate(-1, -2);
      }
      if (locs[2][2] > mscore) {
        mscore = locs[2][2];
        mloc = center.translate(-1, -1);
      }
      if (locs[2][3] > mscore) {
        mscore = locs[2][3];
        mloc = center.translate(-1, 0);
      }
      if (locs[2][4] > mscore) {
        mscore = locs[2][4];
        mloc = center.translate(-1, 1);
      }
      if (locs[2][5] > mscore) {
        mscore = locs[2][5];
        mloc = center.translate(-1, 2);
      }
      if (locs[1][2] > mscore) {
        mscore = locs[1][2];
        mloc = center.translate(-2, -1);
      }
      if (locs[1][3] > mscore) {
        mscore = locs[1][3];
        mloc = center.translate(-2, 0);
      }
      if (locs[1][4] > mscore) {
        mscore = locs[1][4];
        mloc = center.translate(-2, 1);
      }
      if (locs[0][3] > mscore) {
        mscore = locs[0][3];
        mloc = center.translate(-3, 0);
      }
      moveScores[1] = mscore - cost;
      moveLocs[1] = mloc;
    }

    loc = center.translate(-1, 1);
    if (rc.onTheMap(loc) && rc.senseMapInfo(loc).isPassable() && !rc.canSenseRobotAtLocation(loc)) {
      var mscore = cost;
      MapLocation mloc = null;
      if (locs[4][4] > mscore) {
        mscore = locs[4][4];
        mloc = center.translate(1, 1);
      }
      if (locs[3][3] > mscore) {
        mscore = locs[3][3];
        mloc = center.translate(0, 0);
      }
      if (locs[3][4] > mscore) {
        mscore = locs[3][4];
        mloc = center.translate(0, 1);
      }
      if (locs[3][5] > mscore) {
        mscore = locs[3][5];
        mloc = center.translate(0, 2);
      }
      if (locs[2][2] > mscore) {
        mscore = locs[2][2];
        mloc = center.translate(-1, -1);
      }
      if (locs[2][3] > mscore) {
        mscore = locs[2][3];
        mloc = center.translate(-1, 0);
      }
      if (locs[2][4] > mscore) {
        mscore = locs[2][4];
        mloc = center.translate(-1, 1);
      }
      if (locs[2][5] > mscore) {
        mscore = locs[2][5];
        mloc = center.translate(-1, 2);
      }
      if (locs[2][6] > mscore) {
        mscore = locs[2][6];
        mloc = center.translate(-1, 3);
      }
      if (locs[1][3] > mscore) {
        mscore = locs[1][3];
        mloc = center.translate(-2, 0);
      }
      if (locs[1][4] > mscore) {
        mscore = locs[1][4];
        mloc = center.translate(-2, 1);
      }
      if (locs[1][5] > mscore) {
        mscore = locs[1][5];
        mloc = center.translate(-2, 2);
      }
      if (locs[0][4] > mscore) {
        mscore = locs[0][4];
        mloc = center.translate(-3, 1);
      }
      moveScores[2] = mscore - cost;
      moveLocs[2] = mloc;
    }

    loc = center.translate(0, -1);
    if (rc.onTheMap(loc) && rc.senseMapInfo(loc).isPassable() && !rc.canSenseRobotAtLocation(loc)) {
      var mscore = cost;
      MapLocation mloc = null;
      if (locs[5][2] > mscore) {
        mscore = locs[5][2];
        mloc = center.translate(2, -1);
      }
      if (locs[4][1] > mscore) {
        mscore = locs[4][1];
        mloc = center.translate(1, -2);
      }
      if (locs[4][2] > mscore) {
        mscore = locs[4][2];
        mloc = center.translate(1, -1);
      }
      if (locs[4][3] > mscore) {
        mscore = locs[4][3];
        mloc = center.translate(1, 0);
      }
      if (locs[3][0] > mscore) {
        mscore = locs[3][0];
        mloc = center.translate(0, -3);
      }
      if (locs[3][1] > mscore) {
        mscore = locs[3][1];
        mloc = center.translate(0, -2);
      }
      if (locs[3][2] > mscore) {
        mscore = locs[3][2];
        mloc = center.translate(0, -1);
      }
      if (locs[3][3] > mscore) {
        mscore = locs[3][3];
        mloc = center.translate(0, 0);
      }
      if (locs[3][4] > mscore) {
        mscore = locs[3][4];
        mloc = center.translate(0, 1);
      }
      if (locs[2][1] > mscore) {
        mscore = locs[2][1];
        mloc = center.translate(-1, -2);
      }
      if (locs[2][2] > mscore) {
        mscore = locs[2][2];
        mloc = center.translate(-1, -1);
      }
      if (locs[2][3] > mscore) {
        mscore = locs[2][3];
        mloc = center.translate(-1, 0);
      }
      if (locs[1][2] > mscore) {
        mscore = locs[1][2];
        mloc = center.translate(-2, -1);
      }
      moveScores[3] = mscore - cost;
      moveLocs[3] = mloc;
    }

    loc = center.translate(0, 0);
    if (rc.onTheMap(loc) && rc.senseMapInfo(loc).isPassable() && !rc.canSenseRobotAtLocation(loc)) {
      var mscore = cost;
      MapLocation mloc = null;
      if (locs[5][3] > mscore) {
        mscore = locs[5][3];
        mloc = center.translate(2, 0);
      }
      if (locs[4][2] > mscore) {
        mscore = locs[4][2];
        mloc = center.translate(1, -1);
      }
      if (locs[4][3] > mscore) {
        mscore = locs[4][3];
        mloc = center.translate(1, 0);
      }
      if (locs[4][4] > mscore) {
        mscore = locs[4][4];
        mloc = center.translate(1, 1);
      }
      if (locs[3][1] > mscore) {
        mscore = locs[3][1];
        mloc = center.translate(0, -2);
      }
      if (locs[3][2] > mscore) {
        mscore = locs[3][2];
        mloc = center.translate(0, -1);
      }
      if (locs[3][3] > mscore) {
        mscore = locs[3][3];
        mloc = center.translate(0, 0);
      }
      if (locs[3][4] > mscore) {
        mscore = locs[3][4];
        mloc = center.translate(0, 1);
      }
      if (locs[3][5] > mscore) {
        mscore = locs[3][5];
        mloc = center.translate(0, 2);
      }
      if (locs[2][2] > mscore) {
        mscore = locs[2][2];
        mloc = center.translate(-1, -1);
      }
      if (locs[2][3] > mscore) {
        mscore = locs[2][3];
        mloc = center.translate(-1, 0);
      }
      if (locs[2][4] > mscore) {
        mscore = locs[2][4];
        mloc = center.translate(-1, 1);
      }
      if (locs[1][3] > mscore) {
        mscore = locs[1][3];
        mloc = center.translate(-2, 0);
      }
      moveScores[4] = mscore - cost;
      moveLocs[4] = mloc;
    }

    loc = center.translate(0, 1);
    if (rc.onTheMap(loc) && rc.senseMapInfo(loc).isPassable() && !rc.canSenseRobotAtLocation(loc)) {
      var mscore = cost;
      MapLocation mloc = null;
      if (locs[5][4] > mscore) {
        mscore = locs[5][4];
        mloc = center.translate(2, 1);
      }
      if (locs[4][3] > mscore) {
        mscore = locs[4][3];
        mloc = center.translate(1, 0);
      }
      if (locs[4][4] > mscore) {
        mscore = locs[4][4];
        mloc = center.translate(1, 1);
      }
      if (locs[4][5] > mscore) {
        mscore = locs[4][5];
        mloc = center.translate(1, 2);
      }
      if (locs[3][2] > mscore) {
        mscore = locs[3][2];
        mloc = center.translate(0, -1);
      }
      if (locs[3][3] > mscore) {
        mscore = locs[3][3];
        mloc = center.translate(0, 0);
      }
      if (locs[3][4] > mscore) {
        mscore = locs[3][4];
        mloc = center.translate(0, 1);
      }
      if (locs[3][5] > mscore) {
        mscore = locs[3][5];
        mloc = center.translate(0, 2);
      }
      if (locs[3][6] > mscore) {
        mscore = locs[3][6];
        mloc = center.translate(0, 3);
      }
      if (locs[2][3] > mscore) {
        mscore = locs[2][3];
        mloc = center.translate(-1, 0);
      }
      if (locs[2][4] > mscore) {
        mscore = locs[2][4];
        mloc = center.translate(-1, 1);
      }
      if (locs[2][5] > mscore) {
        mscore = locs[2][5];
        mloc = center.translate(-1, 2);
      }
      if (locs[1][4] > mscore) {
        mscore = locs[1][4];
        mloc = center.translate(-2, 1);
      }
      moveScores[5] = mscore - cost;
      moveLocs[5] = mloc;
    }

    loc = center.translate(1, -1);
    if (rc.onTheMap(loc) && rc.senseMapInfo(loc).isPassable() && !rc.canSenseRobotAtLocation(loc)) {
      var mscore = cost;
      MapLocation mloc = null;
      if (locs[6][2] > mscore) {
        mscore = locs[6][2];
        mloc = center.translate(3, -1);
      }
      if (locs[5][1] > mscore) {
        mscore = locs[5][1];
        mloc = center.translate(2, -2);
      }
      if (locs[5][2] > mscore) {
        mscore = locs[5][2];
        mloc = center.translate(2, -1);
      }
      if (locs[5][3] > mscore) {
        mscore = locs[5][3];
        mloc = center.translate(2, 0);
      }
      if (locs[4][0] > mscore) {
        mscore = locs[4][0];
        mloc = center.translate(1, -3);
      }
      if (locs[4][1] > mscore) {
        mscore = locs[4][1];
        mloc = center.translate(1, -2);
      }
      if (locs[4][2] > mscore) {
        mscore = locs[4][2];
        mloc = center.translate(1, -1);
      }
      if (locs[4][3] > mscore) {
        mscore = locs[4][3];
        mloc = center.translate(1, 0);
      }
      if (locs[4][4] > mscore) {
        mscore = locs[4][4];
        mloc = center.translate(1, 1);
      }
      if (locs[3][1] > mscore) {
        mscore = locs[3][1];
        mloc = center.translate(0, -2);
      }
      if (locs[3][2] > mscore) {
        mscore = locs[3][2];
        mloc = center.translate(0, -1);
      }
      if (locs[3][3] > mscore) {
        mscore = locs[3][3];
        mloc = center.translate(0, 0);
      }
      if (locs[2][2] > mscore) {
        mscore = locs[2][2];
        mloc = center.translate(-1, -1);
      }
      moveScores[6] = mscore - cost;
      moveLocs[6] = mloc;
    }

    loc = center.translate(1, 0);
    if (rc.onTheMap(loc) && rc.senseMapInfo(loc).isPassable() && !rc.canSenseRobotAtLocation(loc)) {
      var mscore = cost;
      MapLocation mloc = null;
      if (locs[6][3] > mscore) {
        mscore = locs[6][3];
        mloc = center.translate(3, 0);
      }
      if (locs[5][2] > mscore) {
        mscore = locs[5][2];
        mloc = center.translate(2, -1);
      }
      if (locs[5][3] > mscore) {
        mscore = locs[5][3];
        mloc = center.translate(2, 0);
      }
      if (locs[5][4] > mscore) {
        mscore = locs[5][4];
        mloc = center.translate(2, 1);
      }
      if (locs[4][1] > mscore) {
        mscore = locs[4][1];
        mloc = center.translate(1, -2);
      }
      if (locs[4][2] > mscore) {
        mscore = locs[4][2];
        mloc = center.translate(1, -1);
      }
      if (locs[4][3] > mscore) {
        mscore = locs[4][3];
        mloc = center.translate(1, 0);
      }
      if (locs[4][4] > mscore) {
        mscore = locs[4][4];
        mloc = center.translate(1, 1);
      }
      if (locs[4][5] > mscore) {
        mscore = locs[4][5];
        mloc = center.translate(1, 2);
      }
      if (locs[3][2] > mscore) {
        mscore = locs[3][2];
        mloc = center.translate(0, -1);
      }
      if (locs[3][3] > mscore) {
        mscore = locs[3][3];
        mloc = center.translate(0, 0);
      }
      if (locs[3][4] > mscore) {
        mscore = locs[3][4];
        mloc = center.translate(0, 1);
      }
      if (locs[2][3] > mscore) {
        mscore = locs[2][3];
        mloc = center.translate(-1, 0);
      }
      moveScores[7] = mscore - cost;
      moveLocs[7] = mloc;
    }

    loc = center.translate(1, 1);
    if (rc.onTheMap(loc) && rc.senseMapInfo(loc).isPassable() && !rc.canSenseRobotAtLocation(loc)) {
      var mscore = cost;
      MapLocation mloc = null;
      if (locs[6][4] > mscore) {
        mscore = locs[6][4];
        mloc = center.translate(3, 1);
      }
      if (locs[5][3] > mscore) {
        mscore = locs[5][3];
        mloc = center.translate(2, 0);
      }
      if (locs[5][4] > mscore) {
        mscore = locs[5][4];
        mloc = center.translate(2, 1);
      }
      if (locs[5][5] > mscore) {
        mscore = locs[5][5];
        mloc = center.translate(2, 2);
      }
      if (locs[4][2] > mscore) {
        mscore = locs[4][2];
        mloc = center.translate(1, -1);
      }
      if (locs[4][3] > mscore) {
        mscore = locs[4][3];
        mloc = center.translate(1, 0);
      }
      if (locs[4][4] > mscore) {
        mscore = locs[4][4];
        mloc = center.translate(1, 1);
      }
      if (locs[4][5] > mscore) {
        mscore = locs[4][5];
        mloc = center.translate(1, 2);
      }
      if (locs[4][6] > mscore) {
        mscore = locs[4][6];
        mloc = center.translate(1, 3);
      }
      if (locs[3][3] > mscore) {
        mscore = locs[3][3];
        mloc = center.translate(0, 0);
      }
      if (locs[3][4] > mscore) {
        mscore = locs[3][4];
        mloc = center.translate(0, 1);
      }
      if (locs[3][5] > mscore) {
        mscore = locs[3][5];
        mloc = center.translate(0, 2);
      }
      if (locs[2][4] > mscore) {
        mscore = locs[2][4];
        mloc = center.translate(-1, 1);
      }
      moveScores[8] = mscore - cost;
      moveLocs[8] = mloc;
    }


    for (var uloc : ulocs) {
      var dx = uloc.loc.x - center.x;
      var dy = uloc.loc.y - center.y;
      var idx = (dy + 1) + (dx + 1) * 3;
      uloc.attack = new Attack(moveScores[idx], moveLocs[idx], null);
    }
  }
}
